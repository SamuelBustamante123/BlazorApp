@page "/players"
@using System.Text.Json
@using System.Text.Json.Serialization;

@inject IHttpClientFactory ClientFactory

<h1>Players</h1>

@if (getPlayerError)
{
    <p>Unable to get players</p>
}
else
{
    <ul>--
            <li>Player : @players.firstName @players.lastName</li>
            <li>Player height = @players.heightFeet' @players.heightInches''</li>
            <li>Player weight = @players.weightPounds</li>
            <li>Player city  = @players.team?.city</li>
    </ul>
}

@code {
    private Players players = new Players();
    private bool getPlayerError;
    private bool shouldRender;

    protected override bool ShouldRender() => shouldRender;
    
    protected override async Task OnInitializedAsync()
    {

        var request = new HttpRequestMessage(HttpMethod.Get, "https://www.balldontlie.io/api/v1/players/237");
        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();

            players = await JsonSerializer.DeserializeAsync<Players>(responseStream);
        }
        else
        {
            getPlayerError = true;
        }
        shouldRender = true;

    }



    public class Players
    {
        [JsonPropertyName("id")]
        public int id { get; set; }

        [JsonPropertyName("first_name")]
        public string? firstName { get; set; }

        [JsonPropertyName("height_feet")]
        public int? heightFeet { get; set; }

        [JsonPropertyName("height_inches")]
        public int? heightInches { get; set; }

        [JsonPropertyName("last_name")]
        public string? lastName { get; set; }

        [JsonPropertyName("position")]
        public string? position { get; set; }

        [JsonPropertyName("team")] 
        public Team? team { get; set; }

        [JsonPropertyName("weight_pounds")]
        public int weightPounds { get; set; }

    }
    
    public class Team
    {
        [JsonPropertyName("id")]
        public int id { get; set; }

        [JsonPropertyName("abbreviation")]
        public string? abbreviation { get; set; }
        
        [JsonPropertyName("city")]
        public string? city { get; set; }
        
        [JsonPropertyName("conference")]
        public string? conference { get; set; }

        [JsonPropertyName("division")]
        public string? division { get; set; }

        [JsonPropertyName("full_name")]
        public string? fullName { get; set; }
        
        [JsonPropertyName("name")]
        public string? shortName { get; set; }

    }
}
