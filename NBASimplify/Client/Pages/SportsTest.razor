@page "/sportsTest"

@using BlazorApp1.Shared
@inject HttpClient Http


<style>
    .sort-th {
        cursor: pointer;
    }

    .fa {
        float: right;
    }
</style>


@if (players == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name </th>
                <th>Team</th>
                <th>Assists</th>
                <th>Blocks</th>
                <th>Steals</th>
                <th>Turnovers</th>
                <th class="sort-th" @onclick="@(() => SortTable("Points"))">
                    Points
                    <span class="fa @(SetSortIcon("Points"))"></span>
                </th>
                <th>Efficiency Rating</th>
                <th>Fantasy Points</th>
                <th>Updated </th>

            </tr>
        </thead>
        <tbody>
            @foreach (var player in players)
            {
                <tr>
                    <td>@player.name</td>
                    <td>@player.team</td>
                    <td>@player.assists</td>
                    <td>@player.blockedShots</td>
                    <td>@player.steals</td>
                    <td>@player.turnOvers</td>
                    <td>@player.points</td>
                    <td>@player.playerERating</td>
                    <td>@player.fantasyPoints</td>
                    <td>@player.updated.ToShortDateString()</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<PlayerStats>? players;
    private bool isSortedAscending = false;

    protected override async Task OnInitializedAsync()
    {
        players = await Http.GetFromJsonAsync<List<PlayerStats>>("Api/Values");
    }

    private void SortTable(string columnName)
    {
        if (columnName == "Points")
        {
            if (isSortedAscending)
            {
                players = players.OrderByDescending(x => x.GetType().GetProperty("points").GetValue(x, null)).ToList();
            }
            else
            {
                players = players.OrderBy(x => x.GetType().GetProperty("points").GetValue(x, null)).ToList();
            }

            isSortedAscending = !isSortedAscending;
        }
    }

    private string SetSortIcon(string columnName)
    {
        if (isSortedAscending)
        {
            return "fa-sort-up";
        }
        else
        {
            return "fa-sort-down";
        }
    }

}
